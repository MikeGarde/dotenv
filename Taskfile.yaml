version: '3'

tasks:
  default:
    desc: Show the available tasks
    cmds:
      - task --list --sort alphanumeric

  tests:
    desc: Run tests
    deps:
      - build
    cmds:
      - npm run tests

  eslint:
    desc: Lint JavaScript files
    cmds:
      - npm run eslint:check

  build:
    desc: Compile TypeScript to JavaScript
    cmds:
      - npx tsc
    sources:
      - src/**/*.ts
    generates:
      - build/**/*.js
  build:watch:
    desc: Compile TypeScript to JavaScript and watch for changes
    cmds:
      - npx tsc -w
    sources:
      - src/**/*.ts
    generates:
      - build/**/*.js

  dev-install:
    desc: Local development setup
    cmds:
      - npm install
      - task build
      - sudo npm install -g

  publish:
    desc: Create a new release, task publish -- [patch|minor|major]
    silent: true
    vars:
      STEP: '{{default "patch" .CLI_ARGS}}'
    cmds:
      - |
        STEP="{{.STEP}}"

        # Only allowed on main branch
        if [ "$(git rev-parse --abbrev-ref HEAD)" != "main" ]; then
          echo "Not on main branch"
          exit 1
        fi
        
        # Clear build directory
        rm -rf build
        git checkout -- build
        
        task tests

        VERSION=$(gh release list --json tagName | jq -r '.[] | .tagName' | sort -V | tail -n 1)
        MAJOR=$(echo $VERSION | cut -d. -f1)
        MINOR=$(echo $VERSION | cut -d. -f2)
        PATCH=$(echo $VERSION | cut -d. -f3)

        echo "Current version: $VERSION"
        if [ "$STEP" = "major" ]; then
          MAJOR=$((MAJOR+1))
          MINOR=0
          PATCH=0
        elif [ "$STEP" = "minor" ]; then
          MINOR=$((MINOR+1))
          PATCH=0
        elif [ "$STEP" = "patch" ]; then
          PATCH=$((PATCH+1))
        else
          echo "Invalid step: $STEP"
          exit 1
        fi
        VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $VERSION"

        npm version $VERSION
        git push
        gh release create "$VERSION" --generate-notes --target main
        npm publish --access public
